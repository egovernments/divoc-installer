# Inventory definition

# etcd configuration
[etcd_cluster]  # recommendation: 3 or 5-7 nodes
192.168.0.4 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu
192.168.0.13 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu
192.168.0.12 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu


# Postgres  configuration
# if with_haproxy_load_balancing: true (in vars/main.yml)
[balancers]
192.168.0.4 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu
192.168.0.13 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu
192.168.0.12 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu


# PostgreSQL nodes
[master]
192.168.0.12 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu postgresql_exists='false'

[replica]
192.168.0.4 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu postgresql_exists='false'
192.168.0.13 ansible_ssh_private_key_file=./divoc-installer.pem ansible_ssh_user=ubuntu postgresql_exists='false'

[postgres_cluster:children]
master
replica

[postgres_cluster:vars]
postgresql_users="[{name: 'registry', password: 'registry123'},{name: 'keycloak', password: 'keycloak123'}]"
postgresql_databases="[{db: 'registry', encoding: 'en_US.UTF-8', lc_collate: 'en_US.UTF-8', lc_ctype: 'en_US.UTF-8', owner: 'registry'},{db: 'keycloak', encoding: 'en_US.UTF-8', lc_collate: 'en_US.UTF-8', lc_ctype: 'en_US.UTF-8', owner: 'keycloak'}]"



# ------------------------------------------------------------------------------
; [registry]
; 13.234.32.156 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu DOCKER_REGISTRY_USER=test DOCKER_REGISTRY_PASSWORD=testpassword

; [elasticsearch]
; 13.234.32.156 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; ; Redis inventory Start
; [standalone]
; standalone1 ansible_ssh_host=13.234.32.156 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu

; [redis_nodes]
; redisnode1 ansible_ssh_host=13.234.32.156 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu

; [redis_cluster:vars]
; redis_port=6379
; master_redis_port=6379
; slave_redis_port=6380

; ; Redis Inventory end

; [kafka]
; 13.235.244.251 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu broker_id=1 adv_ip=10.0.13.78
; 65.1.114.226 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu broker_id=2 adv_ip=10.0.9.169
; 13.127.108.73 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu broker_id=3 adv_ip=10.0.11.233

; ; Kubernetes Inventory start

; node1 ansible_host=10.0.12.93 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; node2 ansible_host=10.0.12.26 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; node3 ansible_host=10.0.9.211 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu

; [kmasters]
; knode1

; [kworkers]
; knode2
; knode3

; [all:vars]
; ansible_python_interpreter=/usr/bin/python3

; ; Kubernetes Inventory end

; ; Postgres Cluster
; [etcd_cluster]  # recommendation: 3 or 5-7 nodes
; 10.0.13.78 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; 10.0.9.169 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; 10.0.11.233 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu


; # if with_haproxy_load_balancing: true (in vars/main.yml)
; [balancers]
; 10.0.13.78 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; 10.0.9.169 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu
; 10.0.11.233 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu


; # PostgreSQL nodes
; [master]
; 10.0.13.78 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu hostname=pgnode01 postgresql_exists='false'

; [replica]
; 10.0.9.169 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu hostname=pgnode02 postgresql_exists='false'
; 10.0.11.233 ansible_ssh_private_key_file=./divoc-perf.pem ansible_ssh_user=ubuntu hostname=pgnode03 postgresql_exists='false'

; [postgres_cluster:children]
; master
; replica


; # In this example, all components will be installed on PostgreSQL nodes
; # You can deploy the etcd cluster and the haproxy balancers on other dedicated servers. 


; [pgbackrest:vars]
; ansible_user='postgres'
; ansible_ssh_pass='secretpassword'